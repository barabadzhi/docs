"use strict";(self.webpackChunkmy_website_001=self.webpackChunkmy_website_001||[]).push([[4250],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,k=d["".concat(p,".").concat(m)]||d[m]||c[m]||l;return n?a.createElement(k,o(o({ref:t},u),{},{components:n})):a.createElement(k,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},36376:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return c}});var a=n(87462),r=n(63366),l=(n(67294),n(3905)),o=["components"],i={id:"NovoRender.DuoMeasurementValues",title:"Interface: DuoMeasurementValues",sidebar_label:"DuoMeasurementValues",custom_edit_url:null},p=void 0,s={unversionedId:"webgl-api/interfaces/NovoRender.DuoMeasurementValues",id:"webgl-api/interfaces/NovoRender.DuoMeasurementValues",title:"Interface: DuoMeasurementValues",description:"NovoRender.DuoMeasurementValues",source:"@site/docs/webgl-api/interfaces/NovoRender.DuoMeasurementValues.md",sourceDirName:"webgl-api/interfaces",slug:"/webgl-api/interfaces/NovoRender.DuoMeasurementValues",permalink:"/docs/webgl-api/interfaces/NovoRender.DuoMeasurementValues",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"NovoRender.DuoMeasurementValues",title:"Interface: DuoMeasurementValues",sidebar_label:"DuoMeasurementValues",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"DrawObject",permalink:"/docs/webgl-api/interfaces/NovoRender.DrawObject"},next:{title:"DynamicAsset",permalink:"/docs/webgl-api/interfaces/NovoRender.DynamicAsset"}},u={},c=[{value:"Properties",id:"properties",level:2},{value:"distance",id:"distance",level:3},{value:"distanceX",id:"distancex",level:3},{value:"distanceY",id:"distancey",level:3},{value:"distanceZ",id:"distancez",level:3},{value:"normalDistance",id:"normaldistance",level:3},{value:"normalPoints",id:"normalpoints",level:3},{value:"pointA",id:"pointa",level:3},{value:"pointB",id:"pointb",level:3},{value:"validMeasureSettings",id:"validmeasuresettings",level:3},{value:"Type declaration",id:"type-declaration",level:4}],d={toc:c};function m(e){var t=e.components,n=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/webgl-api/namespaces/NovoRender"},"NovoRender"),".DuoMeasurementValues"),(0,l.kt)("p",null,"DuoMeasurementValues is a collection of values for measuring two objects"),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"distance"},"distance"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"distance"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"Total distance between the objects"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"distancex"},"distanceX"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"distanceX"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"Distance on the X plane between the objects"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"distancey"},"distanceY"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"distanceY"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"Distance on the Y plane between the objects"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"distancez"},"distanceZ"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"distanceZ"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"Distance on the Z plane between the objects"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"normaldistance"},"normalDistance"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"normalDistance"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"Total normdistance between the objects from object A"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"normalpoints"},"normalPoints"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"normalPoints"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"vec3"),"[]"),(0,l.kt)("p",null,"Point to display normal distance between objects from object A"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"pointa"},"pointA"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"pointA"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"vec3")),(0,l.kt)("p",null,"Closest point on object A"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"pointb"},"pointB"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"pointB"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"vec3")),(0,l.kt)("p",null,"Closest point on object B"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"validmeasuresettings"},"validMeasureSettings"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"validMeasureSettings"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")),(0,l.kt)("p",null,"The valid measurement settings for the current measure objects A and B"),(0,l.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"a")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"boolean"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"b")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"boolean"))))))}m.isMDXComponent=!0}}]);