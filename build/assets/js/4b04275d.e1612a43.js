"use strict";(self.webpackChunkmy_website_001=self.webpackChunkmy_website_001||[]).push([[7243],{3905:function(e,r,t){t.d(r,{Zo:function(){return u},kt:function(){return m}});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=n.createContext({}),s=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},u=function(e){var r=s(e.components);return n.createElement(p.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(t),m=a,f=d["".concat(p,".").concat(m)]||d[m]||c[m]||i;return t?n.createElement(f,o(o({ref:r},u),{},{components:t})):n.createElement(f,o({ref:r},u))}));function m(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var l={};for(var p in r)hasOwnProperty.call(r,p)&&(l[p]=r[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7901:function(e,r,t){t.r(r),t.d(r,{assets:function(){return u},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c}});var n=t(87462),a=t(63366),i=(t(67294),t(3905)),o=["components"],l={id:"NovoRender.CameraProperties",title:"Interface: CameraProperties",sidebar_label:"CameraProperties",custom_edit_url:null},p=void 0,s={unversionedId:"webgl-api/interfaces/NovoRender.CameraProperties",id:"webgl-api/interfaces/NovoRender.CameraProperties",title:"Interface: CameraProperties",description:"NovoRender.CameraProperties",source:"@site/docs/webgl-api/interfaces/NovoRender.CameraProperties.md",sourceDirName:"webgl-api/interfaces",slug:"/webgl-api/interfaces/NovoRender.CameraProperties",permalink:"/docs/webgl-api/interfaces/NovoRender.CameraProperties",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"NovoRender.CameraProperties",title:"Interface: CameraProperties",sidebar_label:"CameraProperties",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"CameraController",permalink:"/docs/webgl-api/interfaces/NovoRender.CameraController"},next:{title:"CameraValues",permalink:"/docs/webgl-api/interfaces/NovoRender.CameraValues"}},u={},c=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Properties",id:"properties",level:2},{value:"far",id:"far",level:3},{value:"fieldOfView",id:"fieldofview",level:3},{value:"kind",id:"kind",level:3},{value:"near",id:"near",level:3},{value:"position",id:"position",level:3},{value:"rotation",id:"rotation",level:3}],d={toc:c};function m(e){var r=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/namespaces/NovoRender"},"NovoRender"),".CameraProperties"),(0,i.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"CameraProperties"))),(0,i.kt)("p",{parentName:"li"},"\u21b3 ",(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.Camera"},(0,i.kt)("inlineCode",{parentName:"a"},"Camera"))))),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"far"},"far"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"far"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Distance to the view frustum far clipping plane."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"remarks")),"\nThe value must be larger than ",(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.CameraProperties#near"},"near")," and and large enough to include the desired maximum viewing distance, which typically is some multiple of the scene size.\nCamera controllers will automatically adjust this value whenever a new scene is assigned to their view, so setting it manually is generally not required.\nSee ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Viewing_frustum"},"https://en.wikipedia.org/wiki/Viewing_frustum")," for more details."),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fieldofview"},"fieldOfView"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"fieldOfView"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Field of view expressed as the vertical viewing angle in degrees for pinhole cameras, or vertical aperature dimension in meters for orthographic cameras."),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"kind"},"kind"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"kind"),": ",(0,i.kt)("inlineCode",{parentName:"p"},'"pinhole"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"orthographic"')),(0,i.kt)("p",null,"Camera type."),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"near"},"near"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"near"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Distance to the view frustum near clipping plane."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"remarks")),"\nThe value must be larger than 0 and preferably as large as possible without creating undesired clipping effects near the camera.\nCamera controllers will automatically adjust this value whenever a new scene is assigned to their view, so setting it manually is generally not required.\nSee ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Viewing_frustum"},"https://en.wikipedia.org/wiki/Viewing_frustum")," for more details."),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"position"},"position"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"position"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"vec3")),(0,i.kt)("p",null,"Camera position expressed as a world space 3D vector."),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"rotation"},"rotation"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"rotation"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"quat")),(0,i.kt)("p",null,"Camera orientation expressed as a world space 3D quaternion."))}m.isMDXComponent=!0}}]);