"use strict";(self.webpackChunkmy_website_001=self.webpackChunkmy_website_001||[]).push([[3964],{3905:function(e,r,t){t.d(r,{Zo:function(){return s},kt:function(){return c}});var a=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var p=a.createContext({}),d=function(e){var r=a.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},s=function(e){var r=d(e.components);return a.createElement(p.Provider,{value:r},e.children)},m={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},u=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=d(t),c=n,f=u["".concat(p,".").concat(c)]||u[c]||m[c]||i;return t?a.createElement(f,o(o({ref:r},s),{},{components:t})):a.createElement(f,o({ref:r},s))}));function c(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var i=t.length,o=new Array(i);o[0]=u;var l={};for(var p in r)hasOwnProperty.call(r,p)&&(l[p]=r[p]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var d=2;d<i;d++)o[d]=t[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},73561:function(e,r,t){t.r(r),t.d(r,{assets:function(){return s},contentTitle:function(){return p},default:function(){return c},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return m}});var a=t(87462),n=t(63366),i=(t(67294),t(3905)),o=["components"],l={id:"NovoRender.Camera",title:"Interface: Camera",sidebar_label:"Camera",custom_edit_url:null},p=void 0,d={unversionedId:"webgl-api/interfaces/NovoRender.Camera",id:"webgl-api/interfaces/NovoRender.Camera",title:"Interface: Camera",description:"NovoRender.Camera",source:"@site/docs/webgl-api/interfaces/NovoRender.Camera.md",sourceDirName:"webgl-api/interfaces",slug:"/webgl-api/interfaces/NovoRender.Camera",permalink:"/docs/webgl-api/interfaces/NovoRender.Camera",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"NovoRender.Camera",title:"Interface: Camera",sidebar_label:"Camera",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"BoundingSphere",permalink:"/docs/webgl-api/interfaces/NovoRender.BoundingSphere"},next:{title:"CameraController",permalink:"/docs/webgl-api/interfaces/NovoRender.CameraController"}},s={},m=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Properties",id:"properties",level:2},{value:"controller",id:"controller",level:3},{value:"far",id:"far",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"fieldOfView",id:"fieldofview",level:3},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"kind",id:"kind",level:3},{value:"Inherited from",id:"inherited-from-2",level:4},{value:"near",id:"near",level:3},{value:"Inherited from",id:"inherited-from-3",level:4},{value:"position",id:"position",level:3},{value:"Inherited from",id:"inherited-from-4",level:4},{value:"rotation",id:"rotation",level:3},{value:"Inherited from",id:"inherited-from-5",level:4},{value:"view",id:"view",level:3},{value:"Methods",id:"methods",level:2},{value:"getDistanceFromViewPlane",id:"getdistancefromviewplane",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4}],u={toc:m};function c(e){var r=e.components,t=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/namespaces/NovoRender"},"NovoRender"),".Camera"),(0,i.kt)("p",null,"Camera Object."),(0,i.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.CameraProperties"},(0,i.kt)("inlineCode",{parentName:"a"},"CameraProperties"))),(0,i.kt)("p",{parentName:"li"},"\u21b3 ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Camera"))),(0,i.kt)("p",{parentName:"li"},"\u21b3\u21b3 ",(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.Internal.CameraExt"},(0,i.kt)("inlineCode",{parentName:"a"},"CameraExt"))))),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"controller"},"controller"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"controller"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.CameraController"},(0,i.kt)("inlineCode",{parentName:"a"},"CameraController"))),(0,i.kt)("p",null,"Get or set the motion controller assigned to this camera. By default, this will be a static controller, whose only function is to provide a reasonable default view for a given scene."),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"far"},"far"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"far"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Distance to the view frustum far clipping plane."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"remarks")),"\nThe value must be larger than ",(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.Camera#near"},"near")," and and large enough to include the desired maximum viewing distance, which typically is some multiple of the scene size.\nCamera controllers will automatically adjust this value whenever a new scene is assigned to their view, so setting it manually is generally not required.\nSee ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Viewing_frustum"},"https://en.wikipedia.org/wiki/Viewing_frustum")," for more details."),(0,i.kt)("h4",{id:"inherited-from"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.CameraProperties"},"CameraProperties"),".",(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.CameraProperties#far"},"far")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fieldofview"},"fieldOfView"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"fieldOfView"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Field of view expressed as the vertical viewing angle in degrees for pinhole cameras, or vertical aperature dimension in meters for orthographic cameras."),(0,i.kt)("h4",{id:"inherited-from-1"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.CameraProperties"},"CameraProperties"),".",(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.CameraProperties#fieldofview"},"fieldOfView")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"kind"},"kind"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"kind"),": ",(0,i.kt)("inlineCode",{parentName:"p"},'"pinhole"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"orthographic"')),(0,i.kt)("p",null,"Camera type."),(0,i.kt)("h4",{id:"inherited-from-2"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.CameraProperties"},"CameraProperties"),".",(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.CameraProperties#kind"},"kind")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"near"},"near"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"near"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Distance to the view frustum near clipping plane."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"remarks")),"\nThe value must be larger than 0 and preferably as large as possible without creating undesired clipping effects near the camera.\nCamera controllers will automatically adjust this value whenever a new scene is assigned to their view, so setting it manually is generally not required.\nSee ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Viewing_frustum"},"https://en.wikipedia.org/wiki/Viewing_frustum")," for more details."),(0,i.kt)("h4",{id:"inherited-from-3"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.CameraProperties"},"CameraProperties"),".",(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.CameraProperties#near"},"near")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"position"},"position"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"position"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"vec3")),(0,i.kt)("p",null,"Camera position expressed as a world space 3D vector."),(0,i.kt)("h4",{id:"inherited-from-4"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.CameraProperties"},"CameraProperties"),".",(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.CameraProperties#position"},"position")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"rotation"},"rotation"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"rotation"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"quat")),(0,i.kt)("p",null,"Camera orientation expressed as a world space 3D quaternion."),(0,i.kt)("h4",{id:"inherited-from-5"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.CameraProperties"},"CameraProperties"),".",(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.CameraProperties#rotation"},"rotation")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"view"},"view"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"view"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.View"},(0,i.kt)("inlineCode",{parentName:"a"},"View"))),(0,i.kt)("p",null,"The view to which this camera belongs."),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"getdistancefromviewplane"},"getDistanceFromViewPlane"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getDistanceFromViewPlane"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"ReadonlyVec3"))))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")))}c.isMDXComponent=!0}}]);