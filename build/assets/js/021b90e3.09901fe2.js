"use strict";(self.webpackChunkmy_website_001=self.webpackChunkmy_website_001||[]).push([[3901],{3905:function(e,t,r){r.d(t,{Zo:function(){return m},kt:function(){return f}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),d=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},m=function(e){var t=d(e.components);return n.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=d(r),f=a,u=c["".concat(p,".").concat(f)]||c[f]||s[f]||i;return r?n.createElement(u,o(o({ref:t},m),{},{components:r})):n.createElement(u,o({ref:t},m))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var d=2;d<i;d++)o[d]=r[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},96844:function(e,t,r){r.r(t),r.d(t,{assets:function(){return m},contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return s}});var n=r(87462),a=r(63366),i=(r(67294),r(3905)),o=["components"],l={id:"NovoRender.Internal.CameraExt",title:"Interface: CameraExt",sidebar_label:"CameraExt",custom_edit_url:null},p=void 0,d={unversionedId:"webgl-api/interfaces/NovoRender.Internal.CameraExt",id:"webgl-api/interfaces/NovoRender.Internal.CameraExt",title:"Interface: CameraExt",description:"NovoRender.Internal.CameraExt",source:"@site/docs/webgl-api/interfaces/NovoRender.Internal.CameraExt.md",sourceDirName:"webgl-api/interfaces",slug:"/webgl-api/interfaces/NovoRender.Internal.CameraExt",permalink:"/docs/webgl-api/interfaces/NovoRender.Internal.CameraExt",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"NovoRender.Internal.CameraExt",title:"Interface: CameraExt",sidebar_label:"CameraExt",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"CameraControllerExt",permalink:"/docs/webgl-api/interfaces/NovoRender.Internal.CameraControllerExt"},next:{title:"RenderSettingsExt",permalink:"/docs/webgl-api/interfaces/NovoRender.Internal.RenderSettingsExt"}},m={},s=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Properties",id:"properties",level:2},{value:"controller",id:"controller",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"far",id:"far",level:3},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"fieldOfView",id:"fieldofview",level:3},{value:"Inherited from",id:"inherited-from-2",level:4},{value:"generation",id:"generation",level:3},{value:"hasChanged",id:"haschanged",level:3},{value:"kind",id:"kind",level:3},{value:"Inherited from",id:"inherited-from-3",level:4},{value:"near",id:"near",level:3},{value:"Inherited from",id:"inherited-from-4",level:4},{value:"position",id:"position",level:3},{value:"Inherited from",id:"inherited-from-5",level:4},{value:"rotation",id:"rotation",level:3},{value:"Inherited from",id:"inherited-from-6",level:4},{value:"view",id:"view",level:3},{value:"Inherited from",id:"inherited-from-7",level:4},{value:"Methods",id:"methods",level:2},{value:"getDistanceFromViewPlane",id:"getdistancefromviewplane",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Inherited from",id:"inherited-from-8",level:4}],c={toc:s};function f(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/namespaces/NovoRender"},"NovoRender"),".",(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/namespaces/NovoRender.Internal"},"Internal"),".CameraExt"),(0,i.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.Camera"},(0,i.kt)("inlineCode",{parentName:"a"},"Camera"))),(0,i.kt)("p",{parentName:"li"},"\u21b3 ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"CameraExt"))))),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"controller"},"controller"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"controller"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.CameraController"},(0,i.kt)("inlineCode",{parentName:"a"},"CameraController"))),(0,i.kt)("p",null,"Get or set the motion controller assigned to this camera. By default, this will be a static controller, whose only function is to provide a reasonable default view for a given scene."),(0,i.kt)("h4",{id:"inherited-from"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.Camera"},"Camera"),".",(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.Camera#controller"},"controller")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"far"},"far"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"far"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Distance to the view frustum far clipping plane."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"remarks")),"\nThe value must be larger than ",(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.Internal.CameraExt#near"},"near")," and and large enough to include the desired maximum viewing distance, which typically is some multiple of the scene size.\nCamera controllers will automatically adjust this value whenever a new scene is assigned to their view, so setting it manually is generally not required.\nSee ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Viewing_frustum"},"https://en.wikipedia.org/wiki/Viewing_frustum")," for more details."),(0,i.kt)("h4",{id:"inherited-from-1"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.Camera"},"Camera"),".",(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.Camera#far"},"far")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fieldofview"},"fieldOfView"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"fieldOfView"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Field of view expressed as the vertical viewing angle in degrees for pinhole cameras, or vertical aperature dimension in meters for orthographic cameras."),(0,i.kt)("h4",{id:"inherited-from-2"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.Camera"},"Camera"),".",(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.Camera#fieldofview"},"fieldOfView")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"generation"},"generation"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"generation"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"haschanged"},"hasChanged"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"hasChanged"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"kind"},"kind"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"kind"),": ",(0,i.kt)("inlineCode",{parentName:"p"},'"pinhole"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"orthographic"')),(0,i.kt)("p",null,"Camera type."),(0,i.kt)("h4",{id:"inherited-from-3"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.Camera"},"Camera"),".",(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.Camera#kind"},"kind")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"near"},"near"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"near"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Distance to the view frustum near clipping plane."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"remarks")),"\nThe value must be larger than 0 and preferably as large as possible without creating undesired clipping effects near the camera.\nCamera controllers will automatically adjust this value whenever a new scene is assigned to their view, so setting it manually is generally not required.\nSee ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Viewing_frustum"},"https://en.wikipedia.org/wiki/Viewing_frustum")," for more details."),(0,i.kt)("h4",{id:"inherited-from-4"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.Camera"},"Camera"),".",(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.Camera#near"},"near")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"position"},"position"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"position"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"vec3")),(0,i.kt)("p",null,"Camera position expressed as a world space 3D vector."),(0,i.kt)("h4",{id:"inherited-from-5"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.Camera"},"Camera"),".",(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.Camera#position"},"position")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"rotation"},"rotation"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"rotation"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"quat")),(0,i.kt)("p",null,"Camera orientation expressed as a world space 3D quaternion."),(0,i.kt)("h4",{id:"inherited-from-6"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.Camera"},"Camera"),".",(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.Camera#rotation"},"rotation")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"view"},"view"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"view"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.View"},(0,i.kt)("inlineCode",{parentName:"a"},"View"))),(0,i.kt)("p",null,"The view to which this camera belongs."),(0,i.kt)("h4",{id:"inherited-from-7"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.Camera"},"Camera"),".",(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.Camera#view"},"view")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"getdistancefromviewplane"},"getDistanceFromViewPlane"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getDistanceFromViewPlane"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"ReadonlyVec3"))))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("h4",{id:"inherited-from-8"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.Camera"},"Camera"),".",(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-api/interfaces/NovoRender.Camera#getdistancefromviewplane"},"getDistanceFromViewPlane")))}f.isMDXComponent=!0}}]);